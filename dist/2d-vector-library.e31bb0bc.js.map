{"version":3,"sources":["index.js"],"names":["mouseParticles","options","canvas","document","getElementById","numParticles","radius","speed","canvasSize","context","getContext","slice","Math","PI","centerX","centerY","angle","forEach","fn","bind","width","window","innerWidth","height","innerHeight","clearRect","objAngle","i","numObjects","x","cos","y","sin","beginPath","arc","fill","requestAnimationFrame","render","e","clientX","clientY","addEventListener","updateMouseCoords","passive","setBounds","bindAll","addEvents","onload","mP","init"],"mappings":";;;;;;IAAMA;AACJ,4BAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKA,OAAL,GAAe;AACbC,MAAAA,MAAM,EAAED,OAAO,CAACC,MAAR,IAAkBC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADb;AAEbC,MAAAA,YAAY,EAAEJ,OAAO,CAACI,YAAR,IAAwB,EAFzB;AAGbC,MAAAA,MAAM,EAAEL,OAAO,CAACK,MAAR,IAAkB,GAHb;AAIbC,MAAAA,KAAK,EAAEN,OAAO,CAACM,KAAR,IAAiB;AAJX,KAAf;AAOA,SAAKC,UAAL,GAAkB,EAAlB;AAEA,SAAKC,OAAL,GAAe,KAAKR,OAAL,CAAaC,MAAb,CAAoBQ,UAApB,CAA+B,IAA/B,CAAf;AAEA,SAAKC,KAAL,GAAaC,IAAI,CAACC,EAAL,GAAU,CAAV,GAAc,KAAKZ,OAAL,CAAaI,YAAxC;AACA,SAAKS,OAAL;AACA,SAAKC,OAAL;AACA,SAAKC,KAAL,GAAa,CAAb;AACD;;;;8BAES;AAAA;;AACR,OAAC,QAAD,EAAW,mBAAX,EAAgC,WAAhC,EAA6C,WAA7C,EACGC,OADH,CACY,UAAAC,EAAE;AAAA,eAAI,KAAI,CAACA,EAAD,CAAJ,GAAW,KAAI,CAACA,EAAD,CAAJ,CAASC,IAAT,CAAc,KAAd,CAAf;AAAA,OADd;AAED;;;gCAEW;AACV,WAAKX,UAAL,GAAkB;AAChBY,QAAAA,KAAK,EAAEC,MAAM,CAACC,UADE;AAEhBC,QAAAA,MAAM,EAAEF,MAAM,CAACG;AAFC,OAAlB;AAID;;;6BAEQ;AACP,WAAKf,OAAL,CAAagB,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,KAAKjB,UAAL,CAAgBY,KAA7C,EAAoD,KAAKZ,UAAL,CAAgBe,MAApE;AACA,WAAKP,KAAL,IAAc,KAAKf,OAAL,CAAaM,KAA3B;AAEA,UAAImB,QAAJ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1B,OAAL,CAAa2B,UAAjC,EAA6CD,CAAC,EAA9C,EAAkD;AAChDD,QAAAA,QAAQ,GAAGC,CAAC,GAAGhB,KAAJ,GAAYK,KAAvB;AACAa,QAAAA,CAAC,GAAG,KAAKf,OAAL,GAAeF,IAAI,CAACkB,GAAL,CAASJ,QAAT,IAAqB,KAAKzB,OAAL,CAAaK,MAArD;AACAyB,QAAAA,CAAC,GAAG,KAAKhB,OAAL,GAAeH,IAAI,CAACoB,GAAL,CAASN,QAAT,IAAqB,KAAKzB,OAAL,CAAaK,MAArD;AAEA,aAAKG,OAAL,CAAawB,SAAb;AACA,aAAKxB,OAAL,CAAayB,GAAb,CAAiBL,CAAjB,EAAoBE,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BnB,IAAI,CAACC,EAAL,GAAU,CAAvC,EAA0C,KAA1C;AACA,aAAKJ,OAAL,CAAa0B,IAAb;AACD;;AAEDC,MAAAA,qBAAqB,CAAC,KAAKC,MAAN,CAArB;AACD;;;sCAEiBC,GAAG;AACnB,WAAKxB,OAAL,GAAewB,CAAC,CAACC,OAAjB;AACA,WAAKxB,OAAL,GAAeuB,CAAC,CAACE,OAAjB;AACD;;;gCAEW;AACV,WAAKvC,OAAL,CAAaC,MAAb,CAAoBuC,gBAApB,CAAqC,WAArC,EAAkD,KAAKC,iBAAvD,EAA0E;AAACC,QAAAA,OAAO,EAAE;AAAV,OAA1E;AACAtB,MAAAA,MAAM,CAACoB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKG,SAAvC;AACD;;;2BAEM;AACL,WAAKC,OAAL;AACA,WAAKD,SAAL;AACA,WAAKE,SAAL;AACA,WAAKT,MAAL;AACD;;;;;;AAGHhB,MAAM,CAAC0B,MAAP,GAAgB,YAAW;AAEzB,MAAMC,EAAE,GAAG,IAAIhD,cAAJ,EAAX;AAEAgD,EAAAA,EAAE,CAACC,IAAH;AACD,CALD","file":"2d-vector-library.e31bb0bc.js","sourceRoot":"..","sourcesContent":["class mouseParticles {\n  constructor(options = {}) {\n    this.options = {\n      canvas: options.canvas || document.getElementById('canvas'),\n      numParticles: options.numParticles || 10,\n      radius: options.radius || 100,\n      speed: options.speed || 0.01,\n    };\n    \n    this.canvasSize = {};\n    \n    this.context = this.options.canvas.getContext('2d');\n\n    this.slice = Math.PI * 2 / this.options.numParticles;\n    this.centerX;\n    this.centerY;\n    this.angle = 0;\n  }\n\n  bindAll() {\n    ['render', 'updateMouseCoords', 'setBounds', 'addEvents']\n      .forEach( fn => this[fn] = this[fn].bind(this));\n  }\n\n  setBounds() {\n    this.canvasSize = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  render() {\n    this.context.clearRect(0, 0, this.canvasSize.width, this.canvasSize.height);\n    this.angle += this.options.speed;\n\n    let objAngle;\n\n    for (let i = 0; i < this.options.numObjects; i++) {\n      objAngle = i * slice + angle;\n      x = this.centerX + Math.cos(objAngle) * this.options.radius;\n      y = this.centerY + Math.sin(objAngle) * this.options.radius;\n  \n      this.context.beginPath();\n      this.context.arc(x, y, 2, 0, Math.PI * 2, false);\n      this.context.fill();\n    }\n\n    requestAnimationFrame(this.render);\n  }\n\n  updateMouseCoords(e) {\n    this.centerX = e.clientX;\n    this.centerY = e.clientY;\n  }\n\n  addEvents() {\n    this.options.canvas.addEventListener('mousemove', this.updateMouseCoords, {passive: true});\n    window.addEventListener('resize', this.setBounds);\n  }\n  \n  init() {\n    this.bindAll();\n    this.setBounds();\n    this.addEvents();\n    this.render();\n  }\n}\n\nwindow.onload = function() {\n\n  const mP = new mouseParticles();\n\n  mP.init();\n}"]}