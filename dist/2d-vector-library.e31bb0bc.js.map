{"version":3,"sources":["vector.js","canvas.js","index.js"],"names":["Vector","x","y","angle","length","getLength","_x","Math","cos","_y","sin","atan2","getAngle","sqrt","v2","value","Canvas","options","canvas","document","getElementById","animate","context","getContext","dpr","forEach","fn","bind","width","window","innerWidth","height","innerHeight","scale","clearRect","requestAnimationFrame","render","bindAll","setCanvas","addEvents","vector","beginPath","arc","PI","canvasOptions","init"],"mappings":"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","file":"2d-vector-library.e31bb0bc.js","sourceRoot":"..","sourcesContent":["class Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set x(value) {\n    this._x = value;\n  }\n\n  set y(value) {\n    this._y = value;\n  }\n\n  setAngle(angle) {\n    const length = this.getLength();\n    this._x = Math.cos(angle) * length;\n    this._y = Math.sin(angle) * length;\n  }\n\n  getAngle() {\n    return Math.atan2(this._y, this._x);\n  }\n\n  setLength(length) {\n    const angle = this.getAngle();\n    this._x = Math.cos(angle) * length;\n    this._y = Math.sin(angle) * length;\n  }\n\n  getLength() {\n    return Math.sqrt(this._x * this._x + this._y * this._y);\n  }\n\n  add(v2) {\n    return new Vector(this._x + v2.x, this._y + v2.y);\n  }\n\n  substract(v2) {\n    return new Vector(this._x - v2.x, this._y - v2.y);\n  }\n\n  multiply(value) {\n    return new Vector(this._x * value, this._y * value);\n  }\n\n  divide(value) {\n    return new Vector(this._x / value, this._y / value);\n  }\n\n  addTo(v2) {\n    this._x += v2.x;\n    this._y += v2.y;\n  }\n\n  substractFrom(v2) {\n    this._x -= v2.x;\n    this._y -= v2.y;\n  }\n\n  multiplyBy(value) {\n    this._x *= value;\n    this._y *= value;\n  }\n\n  dividedBy(value) {\n    this._x /= value;\n    this._y /= value;\n  }\n}\n\nexport { Vector };","class Canvas {\n  constructor(options={}) {\n    this.options = {\n      canvas: options.canvas || document.getElementById('canvas'),\n      animate: options.animate\n    };\n    this.context = this.options.canvas.getContext('2d');\n    // this.dpr = window.devicePixelRatio || 1;\n    this.dpr = 1;\n  }\n\n  bindAll() {\n    ['render', 'setCanvas', 'addEvents']\n      .forEach( fn => this[fn] = this[fn].bind(this));\n  }\n\n  setCanvas() {\n    this.options.canvas.width = window.innerWidth * this.dpr;\n    this.options.canvas.height = window.innerHeight * this.dpr;\n\n    this.context.scale(this.dpr, this.dpr);\n  }\n\n  render() {\n    this.context.clearRect(0, 0, this.options.canvas.width, this.options.canvas.height);\n\n    this.options.animate;\n\n    requestAnimationFrame(this.render);\n  }\n\n  addEvents() {\n\n  }\n\n  init() {\n    this.bindAll();\n    this.setCanvas();\n    this.addEvents();\n    this.render();\n  }\n}\n\nexport { Canvas };","import { Vector } from './vector';\nimport { Canvas } from './canvas';\n\nconst vector = new Vector(100, 100);\n\nfunction animate() {\n  context.beginPath();\n  context.arc(vector.x, vector.y, 10, 0, Math.PI * 2, false);\n}\n\nconst canvasOptions = {\n  animate: animate()\n}\n\nconst canvas = new Canvas(canvasOptions);\ncanvas.init();"]}